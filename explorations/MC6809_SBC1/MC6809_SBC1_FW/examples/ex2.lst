0001                         ; Simple example of using ASSIST09 monitor service routines to do
0002                         ; console input and output.
0003                         
0004                         ; Character defines
0005                         
0006 0004                    EOT     EQU     $04             ; String terminator
0007 000a                    LF      EQU     $0A             ; Line feed
0008 000d                    CR      EQU     $0D             ; Carriage return
0009                         
0010                         ; ASSIST09 SWI call numbers
0011                         
0012 0000                    INCHNP  EQU     0               ; INPUT CHAR IN A REG - NO PARITY
0013 0001                    OUTCH   EQU     1               ; OUTPUT CHAR FROM A REG
0014 0002                    PDATA1  EQU     2               ; OUTPUT STRING
0015 0003                    PDATA   EQU     3               ; OUTPUT CR/LF THEN STRING
0016 0004                    OUT2HS  EQU     4               ; OUTPUT TWO HEX AND SPACE
0017 0005                    OUT4HS  EQU     5               ; OUTPUT FOUR HEX AND SPACE
0018 0006                    PCRLF   EQU     6               ; OUTPUT CR/LF
0019 0007                    SPACE   EQU     7               ; OUTPUT A SPACE
0020 0008                    MONITR  EQU     8               ; ENTER ASSIST09 MONITOR
0021 0009                    VCTRSW  EQU     9               ; VECTOR EXAMINE/SWITCH
0022 000a                    BRKPT   EQU     10              ; USER PROGRAM BREAKPOINT
0023 000b                    PAUSE   EQU     11              ; TASK PAUSE FUNCTION
0024                         
0025 7000                            ORG     $7000           ; Start address
0026                         
0027 7000 30 8d 00 1f        START   LEAX    MSG1,PCR        ; Get address of string to display
0028 7004 3f                         SWI                     ; Call ASSIST09 monitor function
0029 7005 02                         FCB     PDATA1          ; Service code byte
0030                         
0031 7006 3f                         SWI                     ; Input character, return in A
0032 7007 00                         FCB     INCHNP
0033 7008 b7 70 47                   STA     CHAR            ; Save the character in memory
0034                         
0035 700b 3f                         SWI                     ; Print CR/LF
0036 700c 06                         FCB     PCRLF
0037                         
0038 700d 30 8d 00 2b                LEAX    MSG2,PCR        ; Get address of string to display
0039 7011 3f                         SWI                     ; Call ASSIST09 monitor function
0040 7012 02                         FCB     PDATA1          ; Service code byte
0041                         
0042 7013 30 8d 00 30                LEAX    CHAR,PCR        ; Get pointer to character
0043 7017 3f                         SWI                     ; Output in hex
0044 7018 04                         FCB     OUT2HS
0045                         
0046 7019 3f                         SWI                     ; Print CR/LF
0047 701a 06                         FCB     PCRLF
0048                         
0049 701b b6 70 47                   LDA     CHAR            ; Get the character
0050 701e 81 51                      CMPA    #'Q             ; Was it Q?
0051 7020 26 de                      BNE     START           ; If not, repeat
0052                                                          
0053 7022 39                         RTS                     ; Otherwise, return to caller
0054                         
0055 7023 54 79 70 65 20 61  MSG1    FCC     'Type a key (Q to quit): '  ; String to display
     20 6b 65 79 20 28
     51 20 74 6f 20 71
     75 69 74 29 3a 20
0056 703b 04                         FCB     EOT
0057                         
0058 703c 4b 65 79 20 63 6f  MSG2    FCC     'Key code: '    ; String to display
     64 65 3a 20
0059 7046 04                         FCB     EOT
0060                         
0061 7047                    CHAR    RMB     1               ; Holds entered character

0001                         ; Bubble sort example program from the book "Programming the 6809" by
0002                         ; Rodnay Zaks and William Labiak, p.284
0003                         ;
0004                         ; Note that the table length cannot be greater than 127.
0005                         ; Data is sorted as signed bytes, e.g. $80 is interpreted as -1. If
0006                         ; you want unsigned comparison, replace "bge noswit" with "bhs noswit".
0007                         
0008 1000                            org     $1000
0009                         
0010 1000 8e 20 00           bubble  ldx     #base           ; Get table
0011 1003 c6 64                      ldb     #length         ; Get length
0012 1005 5a                         decb
0013 1006 30 85                      leax    b,x             ; Point to end
0014 1008 7f 10 27                   clr     exchg           ; Clear exchange flag
0015 100b a6 84              next    lda     ,x              ; A = current entry
0016 100d a1 82                      cmpa    ,-x             ; Compare with next
0017 100f 2c 0d                      bge     noswit          ; Go to noswitch if current >= next (signed)
0018 1011 34 04                      pshs    b               ; Save B
0019 1013 e6 84                      ldb     ,x              ; Get next
0020 1015 e7 01                      stb     1,x             ; Store in current
0021 1017 a7 84                      sta     ,x              ; Store current in next
0022 1019 35 04                      puls    b               ; Restore B
0023 101b 7c 10 27                   inc     exchg           ; Set exchange flag
0024 101e 5a                 noswit  decb                    ; Decrement B
0025 101f 26 ea                      bne     next            ; Continue until zero
0026 1021 7d 10 27                   tst     exchg           ; Exchange = 0?
0027 1024 26 da                      bne     bubble          ; Restart of no = 0
0028 1026 39                         rts
0029                         
0030                         ; Storage
0031                         
0032 1027                    exchg   rmb     1               ; Exchange flag
0033                         
0034                         ; Data to be sorted (random)
0035                         
0036 2000                            org     $2000
0037                         
0038 0064                    length  equ      100             ; Number of data items
0039                         
0040 2000 cb bb b8 cd a5 7e  base    fcb     203, 187, 184, 205, 165, 126,  19, 253
     13 fd
0041 2008 1e 18 98 8c 67 41          fcb      30,  24, 152, 140, 103,  65, 131, 131
     83 83
0042 2010 bd a1 2d 2c 25 d8          fcb     189, 161,  45,  44,  37, 216, 199, 226
     c7 e2
0043 2018 f7 b3 a4 e6 4e 1c          fcb     247, 179, 164, 230,  78,  28,  64, 160
     40 a0
0044 2020 bc 04 c7 32 4d dd          fcb     188,   4, 199,  50,  77, 221,  73, 204
     49 cc
0045 2028 40 d7 60 97 7c 87          fcb      64, 215,  96, 151, 124, 135, 111, 190
     6f be
0046 2030 34 13 43 58 ae a7          fcb      52,  19,  67,  88, 174, 167,  70, 183
     46 b7
0047 2038 ab 36 f5 fd 64 51          fcb     171,  54, 245, 253, 100,  81, 227,  85
     e3 55
0048 2040 95 29 ef c5 94 64          fcb     149,  41, 239, 197, 148, 100, 240, 249
     f0 f9
0049 2048 df f9 8a f2 22 af          fcb     223, 249, 138, 242,  34, 175, 101,   1
     65 01
0050 2050 31 6a 83 f3 e5 f5          fcb      49, 106, 131, 243, 229, 245, 224, 225
     e0 e1
0051 2058 52 69 24 74 5e d7          fcb      82, 105,  36, 116,  94, 215, 151,  38
     97 26
0052 2060 1e 67 0a 07                fcb      30, 103,  10,   7

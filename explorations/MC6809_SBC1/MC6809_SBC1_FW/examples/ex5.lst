0001                         ; Example of embedded string printer.
0002                         
0003                         ; Defines
0004                         
0005 000a                    LF      equ     $0A             ; Line feed
0006 000d                    CR      equ     $0D             ; Carriage return
0007                         
0008                         ; ASSIST09 SWI call numbers
0009                         
0010 0001                    OUTCH   equ     1               ; OUTPUT CHAR FROM A REG
0011                         
0012                         ; Main program
0013                         
0014 1000                            org     $1000           ; Start address
0015                         
0016 1000 8d 34                      bsr     Imprint         ; Call string printer
0017 1002 48 65 6c 6c 6f 2c          fcc     "Hello, world!"
     20 77 6f 72 6c 64
     21
0018 100f 0d 0a 00                   fcb     CR,LF,0
0019                         
0020 1012 8d 22                      bsr     Imprint         ; Call string printer
0021 1014 20 47 52 45 45 54          fcc     " GREETINGS "
     49 4e 47 53 20
0022 101f 00                         fcb     0
0023                         
0024 1020 8d 14                      bsr     Imprint         ; Call string printer
0025 1022 41 6e 64 20 68 65          fcc     "And hello again."
     6c 6c 6f 20 61 67
     61 69 6e 2e
0026 1032 0d 0a 00                   fcb     CR,LF,0
0027                         
0028 1035 39                         rts 
0029                         
0030                         ; Embedded string printer. Examines the stack to find the embedded
0031                         ; string right after the call to this routine. Outputs one character
0032                         ; at a time until a 0 marker is found. Then it returns to the calling
0033                         ; program just beyond the string. Note: If you forget the terminating
0034                         ; zero marker, it will likely crash on return.
0035                         ;
0036                         ; Registers changed: none
0037                         
0038 1036 34 12              Imprint pshs    a,x             ; Save registers used (3 bytes).
0039 1038 ae 63                      ldx     3,s             ; Pull return address from stack (points to start of string).
0040 103a a6 80              next    lda     0,x+            ; Get a character to print, increment pointer.
0041 103c 27 04                      beq     eos             ; Branch if terminating null reached.
0042 103e 3f                         swi                     ; Call monitor routine to print character.
0043 103f 01                         fcb     OUTCH           ; System call.
0044 1040 20 f8                      bra     next            ; Repeat for next character.
0045                         
0046                         ; X now points past string to next instruction, where we want to return.
0047                         
0048 1042 af 63              eos     stx     3,s             ; Save return address on stack.
0049 1044 35 12                      puls    a,x             ; Restore registers used (3 bytes).
0050 1046 39                         rts                     ; And return.
